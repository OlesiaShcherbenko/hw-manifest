@use "sass:math";
@use "sass:string";
@use "sass:map";

@function rem($sizeInPx) {
  $remSize: math.div($sizeInPx, 16px);
  @return #{$remSize}rem;
}

$fonts: (
  "main": $font-main,
  "secondary": $font-secondary,
);

@mixin font-family($type) {
  font-family: map.get($fonts, $type);
}

@mixin text(
  $font-size: 16px,
  $font-weight: 400,
  $color: $black-color,
  $line-height: initial,
  $font-family: "main"
) {
  @if (string.index(#{$font-size}, "px")) {
    font-size: rem($font-size);
  } @else {
    font-size: $font-size;
  }
  font-weight: $font-weight;
  color: $color;
  @if (string.index(#{$line-height}, "px")) {
    line-height: rem($line-height);
  } @else {
    line-height: $line-height;
  }
  @include font-family($font-family);
}

$breakpoints: (
  "tablet": 768px,
  "desktop": 1024px,
  "hd": 1240px,
  "fullhd": 1440px,
);

@mixin media($screen) {
  @if (string.index(#{$screen}, "px")) {
    @media screen and (min-width: #{$screen}) {
      @content;
    }
  } @else {
    @media screen and (min-width: map.get($breakpoints, $screen)) {
      @content;
    }
  }
}

// centered-flex

@mixin flex($direction: row, $alignment: stretch, $justification: flex-start) {
  display: flex;
  flex-direction: $direction;
  align-items: $alignment;
  justify-content: $justification;
}
